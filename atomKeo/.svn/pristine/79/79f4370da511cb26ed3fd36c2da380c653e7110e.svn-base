package com.agiledge.atom.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.agiledge.atom.dto.ShuttleTripDto;
import com.agiledge.atom.entities.Site;
import com.agiledge.atom.entities.Tripshuttle;
import com.agiledge.atom.entities.Vehicle;
import com.agiledge.atom.service.intfc.SiteService;
import com.agiledge.atom.service.intfc.VehicleTypeService;



@Controller
public class ReportController {
	
	private final static Logger logger = Logger.getLogger(ReportController.class);
	
	@Autowired
	private SiteService siteService;
	
	@Autowired
	private VehicleTypeService vehicleTypeService;
	
	@RequestMapping(value= {"/shuttleDistanceTravel"})
	public String shuttleDistanceTravelHandler(Map<String,Object> map) throws Exception  {
		List<Site> sites=siteService.getSites();
		List<Vehicle> vehicles=vehicleTypeService.getAllVehicle();
			map.put("sites", sites);
			map.put("vehicles", vehicles);
		return "shuttle_distance_travel";
	}
	
	@RequestMapping(value= {"/shuttleDistanceReportSubmit"},method=RequestMethod.POST)
	public String shuttleDistanceSubmit(HttpServletRequest request,RedirectAttributes redirectAttributes) throws Exception  {
		String site=request.getParameter("site");
			String fromDate = request.getParameter("fromDate");
				String toDate = request.getParameter("toDate");
					String vehicle = request.getParameter("chosenregNo");
		List<Tripshuttle> shuttleTripsDetails=vehicleTypeService.getShuttleTripDetails(site,fromDate,toDate,vehicle);
		List<ShuttleTripDto> shuttleTripDtoList=null;
		shuttleTripDtoList=new ArrayList<ShuttleTripDto>();
		ShuttleTripDto stDto=null;
		
		if(shuttleTripsDetails!=null)
		{	
			logger.debug("Tripshuttle size "+shuttleTripsDetails.size());
			
			for(Tripshuttle ts : shuttleTripsDetails){
				stDto=new ShuttleTripDto();
				String vehImei=vehicleTypeService.getVehicleByImei(ts.getImei());
				
				stDto.setVehicleNo(vehImei);
				stDto.setTotaldistance(vehicleTypeService.getDistance(""+ts.getId(), fromDate, toDate));
				stDto.setTripDate(ts.getTripendtime());
				shuttleTripDtoList.add(stDto);
				
			}
		
		}
			//redirectAttributes.addFlashAttribute("shuttleTripsDetails",shuttleTripsDetails);
			redirectAttributes.addFlashAttribute("shuttleTripDtoList",shuttleTripDtoList);
				return "redirect:/shuttleDistanceTravel";
	}
	
	
	
	
	
}
